{"ast":null,"code":"var _jsxFileName = \"/home/azhar/Desktop/React/Facebook Clone/client/src/components/People/People.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport SaveIcon from '@mui/icons-material/Save';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoadingButtonsTransition() {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n\n  function handleClick() {\n    setLoading(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      sx: {\n        display: 'block'\n      },\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: loading,\n        onChange: () => setLoading(!loading),\n        name: \"loading\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this),\n      label: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        '& > button': {\n          m: 1\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n        size: \"small\",\n        onClick: handleClick,\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }, this),\n        loading: loading,\n        loadingPosition: \"end\",\n        variant: \"contained\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n} // import { Grid, CircularProgress, Link, Avatar,Divider, ListItemButton, Button, Box, Typography } from '@mui/material';\n// import React, { useEffect, useState } from \"react\";\n// import FriendRequests from '../FriendRequests';\n// function People() {\n//   const [allProfiles, setAllProfiles] = useState();\n//   const [sendertoken, setSendertoken] = useState(localStorage.getItem('token'));\n//   const [requestStatus, setRequestStatus] = useState([]);\n//   const [friendStatus, setFriendStatus] = useState('Add Friend');\n//   const [requesterEmail, setRequesterEmail] = useState('');\n//   const [processing, setProcessing] = useState(false);\n//   async function getProfiles() {\n//     const req = await fetch(\"http://localhost:1337/api/getAllProfiles\", {\n//       headers: {\n//         'x-access-token': localStorage.getItem('token')\n//       },\n//     });\n//     const data = await req.json();\n//     setAllProfiles(data.profiles);\n//     setFriendStatus(data.friendStatus);\n//     setRequesterEmail(data.requesterEmail);\n//   }\n//   async function addFriend(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/addFriend\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n//   async function cancelRequest(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/cancelRequest\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n//   async function confirmRequest(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/confirmRequest\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n//   async function deleteRequest(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/deleteRequest\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n//   async function removeFriend(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/removeFriend\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n//   useEffect(() => {\n//     getProfiles();\n//   });\n//   return (\n//     allProfiles ?\n//       !allProfiles.length ? <Box className='circularProgress'> <CircularProgress /></Box> : (\n//         <Box sx={{width:'100%'}}>\n//               <Typography align=\"center\" color='gray' variant=\"h5\">Friend Requests</Typography> \n//               <Divider/>\n//               <FriendRequests caller={'people'}/>\n//               <Typography align=\"center\" color='gray' sx={{my:2}} variant=\"h5\">People you may know</Typography> \n//               <Divider/>\n//               {/* <Typography align=\"center\" variant=\"h5\">People you may know</Typography> */}\n//           <Grid className='container' sx={{ alignItems: \"center\", flexDirection: 'column', justifyContent: 'center' }} container spacing={2}>\n//             {allProfiles.map((profile, index) => (\n//               //  index=index+1,\n//               //  console.log(friendStatus),\n//               profile.friendRequested[index] != requesterEmail?\n//                 <Grid sx={{ width: '100%' }} key={profile._id} item xs={12} sm={12} >\n//                   <Box className='friendRequests'>\n//                     <Box sx={{ p: 1, m: 0, borderRadius: 3, flexDirection: 'column', alignItems: 'center' }} >\n//                       <Box sx={{ flexDirection: 'row', display: 'flex', width: '100%', justifyContent: 'space-between' }}>\n//                         <Avatar src={profile.profilePicture} sx={{ width: 60, height: 60 }}></Avatar>\n//                         <Box sx={{ width: '100%', ml: '3%', }}>\n//                           <Typography sx={{ color: 'lack', fontWeight: 900, mt: '3%' }}>{profile.firstName + ' ' + profile.lastName}</Typography>\n//                           <Typography sx={{ color: 'gray', fontSize: '13px', fontWeight: 200, mt: '3%' }}>0 mutual friends</Typography>\n//                         </Box>\n//                         {/* {console.log(\"=================Start=================\")}\n//                           {console.log(\"profile.friendRequests[index]: \", profile.friendRequests[index])}\n//                           {console.log(\"requesterEmail \",requesterEmail)}\n//                           {console.log(\"profile.friendRequests[index] != requesterEmail \", profile.friendRequests[index] != requesterEmail)}\n//                           {console.log(\"==================================\")}\n//                       */}\n//                         {profile.friends[index] != requesterEmail ?\n//                           (profile.friendRequested[index] != requesterEmail ?\n//                             <Box sx={{width:'100%',display:'flex',justifyContent:'flex-end'}}>\n//                               <Button variant=\"contained\" className='friendsButton1' onClick={() => addFriend(profile.email)}      sx={{ disable: processing ? 'true' : 'false', display: profile.friendRequests[index] == requesterEmail ? 'none' : 'flex' }}>Add Friend</Button>\n//                               <Button variant=\"contained\" className='friendsButton1' onClick={() => cancelRequest(profile.email)} sx={{ disable: processing ? 'true' : 'false', display: profile.friendRequests[index] != requesterEmail ? 'none' : 'flex',backgroundColor: 'gray' }}>Cancel</Button>\n//                             </Box>\n//                             : \n//                             <Box sx={{width:'100%',display:'flex',alignItems:{xs:'flex-end',sm:'center'},justifyContent:'flex-end',flexDirection:{xs:'column',sm:'row'}}}>\n//                             <Button variant=\"contained\" className='friendsButton'  onClick={() => confirmRequest(profile.email)} sx={{ disable: processing ? 'true' : 'false' }}>Confirm</Button>\n//                             <Button variant=\"contained\" className='friendsButton'  onClick={() => deleteRequest(profile.email)} sx={{ disable: processing ? 'true' : 'false', ml:5, backgroundColor: 'gray' }}>Delete</Button>\n//                             </Box>\n//                           )\n//                           : \n//                           <Box sx={{width:'100%',display:'flex',alignItems:{xs:'flex-end',sm:'center'},justifyContent:'flex-end',flexDirection:{xs:'column',sm:'row'}}}>\n//                           <Button variant=\"contained\" className='friendsButton' sx={{ disable: processing ? 'true' : 'false', ml:5, backgroundColor: '#eee',color:'black' }}> Friends </Button>\n//                           <Button variant=\"contained\" className='friendsButton'   onClick={() => removeFriend(profile.email)}>Remove</Button>\n//                           </Box>\n//                         }\n//                       </Box>\n//                     </Box>\n//                   </Box>\n//                 </Grid>\n//               :<></>  \n//             ))}\n//           </Grid>\n//         </Box>\n//       )\n//       : <></>\n//   );\n// }\n// export default People\n\n_s(LoadingButtonsTransition, \"awoWwSKBZAy48DVUNX9vIFbdsbI=\");\n\n_c = LoadingButtonsTransition;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingButtonsTransition\");","map":{"version":3,"names":["React","LoadingButton","Box","FormControlLabel","Switch","SaveIcon","SendIcon","LoadingButtonsTransition","loading","setLoading","useState","handleClick","display","m"],"sources":["/home/azhar/Desktop/React/Facebook Clone/client/src/components/People/People.js"],"sourcesContent":["import * as React from 'react';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport SaveIcon from '@mui/icons-material/Save';\nimport SendIcon from '@mui/icons-material/Send';\n\nexport default function LoadingButtonsTransition() {\n  const [loading, setLoading] = React.useState(true);\n  function handleClick() {\n    setLoading(true);\n  }\n\n  return (\n    <Box>\n      <FormControlLabel\n        sx={{\n          display: 'block',\n        }}\n        control={\n          <Switch\n            checked={loading}\n            onChange={() => setLoading(!loading)}\n            name=\"loading\"\n            color=\"primary\"\n          />\n        }\n        label=\"Loading\"\n      />\n      <Box sx={{ '& > button': { m: 1 } }}>\n        \n        \n        <LoadingButton\n          size=\"small\"\n          onClick={handleClick}\n          endIcon={<SendIcon />}\n          loading={loading}\n          loadingPosition=\"end\"\n          variant=\"contained\"\n        >\n          Send\n        </LoadingButton>\n        \n      </Box>\n\n          </Box>\n  );\n}\n\n\n\n// import { Grid, CircularProgress, Link, Avatar,Divider, ListItemButton, Button, Box, Typography } from '@mui/material';\n// import React, { useEffect, useState } from \"react\";\n// import FriendRequests from '../FriendRequests';\n\n// function People() {\n//   const [allProfiles, setAllProfiles] = useState();\n//   const [sendertoken, setSendertoken] = useState(localStorage.getItem('token'));\n//   const [requestStatus, setRequestStatus] = useState([]);\n//   const [friendStatus, setFriendStatus] = useState('Add Friend');\n//   const [requesterEmail, setRequesterEmail] = useState('');\n//   const [processing, setProcessing] = useState(false);\n//   async function getProfiles() {\n//     const req = await fetch(\"http://localhost:1337/api/getAllProfiles\", {\n//       headers: {\n//         'x-access-token': localStorage.getItem('token')\n//       },\n//     });\n//     const data = await req.json();\n//     setAllProfiles(data.profiles);\n//     setFriendStatus(data.friendStatus);\n//     setRequesterEmail(data.requesterEmail);\n//   }\n\n//   async function addFriend(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/addFriend\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n\n//   async function cancelRequest(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/cancelRequest\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n\n//   async function confirmRequest(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/confirmRequest\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n\n//   async function deleteRequest(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/deleteRequest\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n\n\n//   async function removeFriend(recevierEmail) {\n//     setProcessing(true);\n//     const req = await fetch(\"http://localhost:1337/api/removeFriend\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         recevierEmail,\n//         sendertoken,\n//       })\n//     });\n//     const data = await req.json();\n//     setProcessing(false);\n//   }\n\n\n//   useEffect(() => {\n//     getProfiles();\n//   });\n//   return (\n\n//     allProfiles ?\n//       !allProfiles.length ? <Box className='circularProgress'> <CircularProgress /></Box> : (\n//         <Box sx={{width:'100%'}}>\n//               <Typography align=\"center\" color='gray' variant=\"h5\">Friend Requests</Typography> \n//               <Divider/>\n//               <FriendRequests caller={'people'}/>\n//               <Typography align=\"center\" color='gray' sx={{my:2}} variant=\"h5\">People you may know</Typography> \n//               <Divider/>\n//               {/* <Typography align=\"center\" variant=\"h5\">People you may know</Typography> */}\n//           <Grid className='container' sx={{ alignItems: \"center\", flexDirection: 'column', justifyContent: 'center' }} container spacing={2}>\n\n//             {allProfiles.map((profile, index) => (\n\n//               //  index=index+1,\n//               //  console.log(friendStatus),\n//               profile.friendRequested[index] != requesterEmail?\n//                 <Grid sx={{ width: '100%' }} key={profile._id} item xs={12} sm={12} >\n\n//                   <Box className='friendRequests'>\n//                     <Box sx={{ p: 1, m: 0, borderRadius: 3, flexDirection: 'column', alignItems: 'center' }} >\n//                       <Box sx={{ flexDirection: 'row', display: 'flex', width: '100%', justifyContent: 'space-between' }}>\n\n//                         <Avatar src={profile.profilePicture} sx={{ width: 60, height: 60 }}></Avatar>\n//                         <Box sx={{ width: '100%', ml: '3%', }}>\n//                           <Typography sx={{ color: 'lack', fontWeight: 900, mt: '3%' }}>{profile.firstName + ' ' + profile.lastName}</Typography>\n//                           <Typography sx={{ color: 'gray', fontSize: '13px', fontWeight: 200, mt: '3%' }}>0 mutual friends</Typography>\n//                         </Box>\n\n//                         {/* {console.log(\"=================Start=================\")}\n//                           {console.log(\"profile.friendRequests[index]: \", profile.friendRequests[index])}\n//                           {console.log(\"requesterEmail \",requesterEmail)}\n//                           {console.log(\"profile.friendRequests[index] != requesterEmail \", profile.friendRequests[index] != requesterEmail)}\n//                           {console.log(\"==================================\")}\n//                       */}\n\n//                         {profile.friends[index] != requesterEmail ?\n\n//                           (profile.friendRequested[index] != requesterEmail ?\n//                             <Box sx={{width:'100%',display:'flex',justifyContent:'flex-end'}}>\n//                               <Button variant=\"contained\" className='friendsButton1' onClick={() => addFriend(profile.email)}      sx={{ disable: processing ? 'true' : 'false', display: profile.friendRequests[index] == requesterEmail ? 'none' : 'flex' }}>Add Friend</Button>\n//                               <Button variant=\"contained\" className='friendsButton1' onClick={() => cancelRequest(profile.email)} sx={{ disable: processing ? 'true' : 'false', display: profile.friendRequests[index] != requesterEmail ? 'none' : 'flex',backgroundColor: 'gray' }}>Cancel</Button>\n//                             </Box>\n//                             : \n//                             <Box sx={{width:'100%',display:'flex',alignItems:{xs:'flex-end',sm:'center'},justifyContent:'flex-end',flexDirection:{xs:'column',sm:'row'}}}>\n//                             <Button variant=\"contained\" className='friendsButton'  onClick={() => confirmRequest(profile.email)} sx={{ disable: processing ? 'true' : 'false' }}>Confirm</Button>\n//                             <Button variant=\"contained\" className='friendsButton'  onClick={() => deleteRequest(profile.email)} sx={{ disable: processing ? 'true' : 'false', ml:5, backgroundColor: 'gray' }}>Delete</Button>\n//                             </Box>\n//                           )\n//                           : \n//                           <Box sx={{width:'100%',display:'flex',alignItems:{xs:'flex-end',sm:'center'},justifyContent:'flex-end',flexDirection:{xs:'column',sm:'row'}}}>\n//                           <Button variant=\"contained\" className='friendsButton' sx={{ disable: processing ? 'true' : 'false', ml:5, backgroundColor: '#eee',color:'black' }}> Friends </Button>\n//                           <Button variant=\"contained\" className='friendsButton'   onClick={() => removeFriend(profile.email)}>Remove</Button>\n//                           </Box>\n//                         }\n//                       </Box>\n//                     </Box>\n//                   </Box>\n\n//                 </Grid>\n//               :<></>  \n//             ))}\n//           </Grid>\n//         </Box>\n//       )\n//       : <></>\n//   );\n// }\n\n// export default People"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,eAAe,SAASC,wBAAT,GAAoC;EAAA;;EACjD,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACU,QAAN,CAAe,IAAf,CAA9B;;EACA,SAASC,WAAT,GAAuB;IACrBF,UAAU,CAAC,IAAD,CAAV;EACD;;EAED,oBACE,QAAC,GAAD;IAAA,wBACE,QAAC,gBAAD;MACE,EAAE,EAAE;QACFG,OAAO,EAAE;MADP,CADN;MAIE,OAAO,eACL,QAAC,MAAD;QACE,OAAO,EAAEJ,OADX;QAEE,QAAQ,EAAE,MAAMC,UAAU,CAAC,CAACD,OAAF,CAF5B;QAGE,IAAI,EAAC,SAHP;QAIE,KAAK,EAAC;MAJR;QAAA;QAAA;QAAA;MAAA,QALJ;MAYE,KAAK,EAAC;IAZR;MAAA;MAAA;MAAA;IAAA,QADF,eAeE,QAAC,GAAD;MAAK,EAAE,EAAE;QAAE,cAAc;UAAEK,CAAC,EAAE;QAAL;MAAhB,CAAT;MAAA,uBAGE,QAAC,aAAD;QACE,IAAI,EAAC,OADP;QAEE,OAAO,EAAEF,WAFX;QAGE,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAHX;QAIE,OAAO,EAAEH,OAJX;QAKE,eAAe,EAAC,KALlB;QAME,OAAO,EAAC,WANV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAHF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkwBD,wB;;KAAAA,wB"},"metadata":{},"sourceType":"module"}